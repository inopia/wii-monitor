#!/usr/bin/python

import json
import os
import psutil
import pwd
import subprocess
import sys
import time

import pynotify

navigation_config = "navigation"
username = pwd.getpwuid(os.getuid()).pw_name

with open("/home/%s/.cwiid/game-mappings.json" % username, "r") as infile:
    known_games = json.loads(infile.read())

# even in Python this is globally nasty <img src="http://developer.ubuntu.com/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley"> , do something nicer in your own code
# lol i just copied it :D, fix your tutorial
capabilities = {
    'actions':             False,
    'body':                False,
    'body-hyperlinks':     False,
    'body-images':         False,
    'body-markup':         False,
    'icon-multi':          False,
    'icon-static':         False,
    'sound':               False,
    'image/svg+xml':       False,
    'private-synchronous': False,
    'append':              False,
    'private-icon-only':   False}

def initCaps():
    caps = pynotify.get_server_caps ()
    if caps is None:
        print "Failed to receive server caps."
        sys.exit(1)

    for cap in caps:
        capabilities[cap] = True

def printCaps():
    info = pynotify.get_server_info ()
    caps = pynotify.get_server_caps ()
    if caps is None:
        print "Failed to receive server caps."
        sys.exit (1)

def send_message(message):
    try:
        n = pynotify.Notification(
            message,
            "",
            "wiican-remote")  # TODO copy wiican icons
        n.set_timeout(pynotify.EXPIRES_DEFAULT)
        n.show()
    except:
        # TODO sometimes this fails for some reason, just ignore for now
        pass

def get_cwiid_proc(cwiid_proc, params):
   if cwiid_proc is not None:
        cwiid_proc.terminate()
   return subprocess.Popen(params)

if __name__ == '__main__':
    if not pynotify.init ("icon-summary"):
        sys.exit (1)

    # call this so we can savely use capabilities dictionary later
    initCaps()

    # show what's supported
    printCaps()

    current_game = False
    cwiid_proc = None

    while True:
        new_game = None
        for proc in psutil.get_process_list():
            try:
                if proc.username == username:
                    if proc.name in known_games.keys():
                        print proc.name
                        new_game = proc.name
                        break
            except: # proc not exist anymore
                pass

        if new_game != current_game:
            current_game = new_game
            if new_game is None:
                send_message("Navigation mode: press 1+2 to connect")
                cwiid_proc = get_cwiid_proc(cwiid_proc, ["wminput", "--config", navigation_config, "--wait"])

            else:
                send_message("Playing %s: press 1+2 to connect" % current_game)
                cwiid_proc = get_cwiid_proc(cwiid_proc, ["wminput", "--config", known_games[current_game], "--wait"])

        time.sleep(5)
